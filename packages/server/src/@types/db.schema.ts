/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgresql://username:password@127.0.0.1:5432/jobhub -t jobs -t jobs_applications -t knex_migrations -t knex_migrations_lock -t users -s public
 *
 */


export type Json = unknown;
export type job_application_status = 'applied' | 'hired' | 'interviewing' | 'offered' | 'rejected';
export type job_experience_level = 'entry' | 'executive' | 'internship' | 'lead' | 'manager' | 'mid' | 'senior';
export type job_pay_type = 'bi_weekly' | 'daily' | 'hourly' | 'monthly' | 'weekly' | 'yearly';
export type job_remote_status = 'hybrid' | 'onsite' | 'remote';
export type job_type = 'contract' | 'full_time' | 'internship' | 'part_time' | 'remote' | 'temporary' | 'volunteer';

// Table jobs
export interface Jobs {
  id: string;
  title: string;
  description: string | null;
  url: string;
  date_posted: Date | null;
  remote_status: job_remote_status;
  location: string | null;
  company: string | null;
  experience_level: job_experience_level;
  type: job_type;
  pay_min: number | null;
  pay_max: number | null;
  pay_type: job_pay_type | null;
  archived: boolean;
  created_by: string;
  created_at: Date;
  updated_at: Date;
}
export interface JobsInput {
  id?: string;
  title: string;
  description?: string | null;
  url: string;
  date_posted?: Date | null;
  remote_status: job_remote_status;
  location?: string | null;
  company?: string | null;
  experience_level: job_experience_level;
  type: job_type;
  pay_min?: number | null;
  pay_max?: number | null;
  pay_type?: job_pay_type | null;
  archived?: boolean;
  created_by: string;
  created_at?: Date;
  updated_at?: Date;
}
const jobs = {
  tableName: 'jobs',
  columns: ['id', 'title', 'description', 'url', 'date_posted', 'remote_status', 'location', 'company', 'experience_level', 'type', 'pay_min', 'pay_max', 'pay_type', 'archived', 'created_by', 'created_at', 'updated_at'],
  requiredForInsert: ['title', 'url', 'remote_status', 'experience_level', 'type', 'created_by'],
  primaryKey: 'id',
  foreignKeys: { created_by: { table: 'users', column: 'id', $type: null as unknown as Users }, },
  $type: null as unknown as Jobs,
  $input: null as unknown as JobsInput
} as const;

// Table jobs_applications
export interface JobsApplications {
  id: string;
  job_id: string;
  user_id: string;
  status: job_application_status;
  created_at: Date;
  updated_at: Date;
}
export interface JobsApplicationsInput {
  id?: string;
  job_id: string;
  user_id: string;
  status: job_application_status;
  created_at?: Date;
  updated_at?: Date;
}
const jobs_applications = {
  tableName: 'jobs_applications',
  columns: ['id', 'job_id', 'user_id', 'status', 'created_at', 'updated_at'],
  requiredForInsert: ['job_id', 'user_id', 'status'],
  primaryKey: 'id',
  foreignKeys: {
    job_id: { table: 'jobs', column: 'id', $type: null as unknown as Jobs },
    user_id: { table: 'users', column: 'id', $type: null as unknown as Users },
  },
  $type: null as unknown as JobsApplications,
  $input: null as unknown as JobsApplicationsInput
} as const;

// Table knex_migrations
export interface KnexMigrations {
  id: number;
  name: string | null;
  batch: number | null;
  migration_time: Date | null;
}
export interface KnexMigrationsInput {
  id?: number;
  name?: string | null;
  batch?: number | null;
  migration_time?: Date | null;
}
const knex_migrations = {
  tableName: 'knex_migrations',
  columns: ['id', 'name', 'batch', 'migration_time'],
  requiredForInsert: [],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as KnexMigrations,
  $input: null as unknown as KnexMigrationsInput
} as const;

// Table knex_migrations_lock
export interface KnexMigrationsLock {
  index: number;
  is_locked: number | null;
}
export interface KnexMigrationsLockInput {
  index?: number;
  is_locked?: number | null;
}
const knex_migrations_lock = {
  tableName: 'knex_migrations_lock',
  columns: ['index', 'is_locked'],
  requiredForInsert: [],
  primaryKey: 'index',
  foreignKeys: {},
  $type: null as unknown as KnexMigrationsLock,
  $input: null as unknown as KnexMigrationsLockInput
} as const;

// Table users
export interface Users {
  /** Unique identifier */
  id: string;
  /** Email address */
  email: string;
  /** Password */
  password: string;
  /** Name */
  name: string;
  /** Creation date */
  created_at: Date;
  /** Last update date */
  updated_at: Date;
}
export interface UsersInput {
  /** Unique identifier */
  id?: string;
  /** Email address */
  email: string;
  /** Password */
  password: string;
  /** Name */
  name: string;
  /** Creation date */
  created_at?: Date;
  /** Last update date */
  updated_at?: Date;
}
const users = {
  tableName: 'users',
  columns: ['id', 'email', 'password', 'name', 'created_at', 'updated_at'],
  requiredForInsert: ['email', 'password', 'name'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Users,
  $input: null as unknown as UsersInput
} as const;


export interface TableTypes {
  jobs: {
    select: Jobs;
    input: JobsInput;
  };
  jobs_applications: {
    select: JobsApplications;
    input: JobsApplicationsInput;
  };
  knex_migrations: {
    select: KnexMigrations;
    input: KnexMigrationsInput;
  };
  knex_migrations_lock: {
    select: KnexMigrationsLock;
    input: KnexMigrationsLockInput;
  };
  users: {
    select: Users;
    input: UsersInput;
  };
}

export const tables = {
  jobs,
  jobs_applications,
  knex_migrations,
  knex_migrations_lock,
  users,
}
